{"ast":null,"code":"var _jsxFileName = \"/Users/sameer/code/robofriends/src/containers/App.js\";\n// import React, { Component } from 'react';\nimport React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css'; // import Rating from '../components/Rating';\n\nimport db from '../firebase.config.js';\n\nfunction App() {\n  // constructor() {\n  //   super()\n  //   this.state = {\n  //     robots: [],\n  //     searchfield: ''\n  //   }\n  // }\n  const [robots, searchfield] = useState([]);\n\n  const fetchRobots = async () => {\n    const data = await response.get('https://jsonplaceholder.typicode.com/users');\n    console.log(\"incomgin data from response\", data);\n    data.docs.forEach(item => {\n      setBlogs([...robots, item.data()]);\n    });\n  };\n\n  useEffect(() => {\n    fetchRobots();\n  }, []); // componentDidMount() {\n  //   fetch('https://jsonplaceholder.typicode.com/users')\n  //     .then(response=> response.json())\n  //     .then(users => {this.setState({ robots: users})});\n  //   // fetch('firebase...').then\n  // }\n\n  onSearchChange = event => {\n    this.setState({\n      searchfield: event.target.value\n    });\n  }; // postRating = (cardID, ratingval) =>{\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, robots && robots.map(robot => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"X\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, robot.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, robot.body));\n  })); // render() {\n  //   const { robots, searchfield } = this.state;\n  //   const filteredRobots = robots.filter(robot =>{\n  //     return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  //   })\n  //   return !robots.length ?\n  //     <h1>Loading</h1> :\n  //     (\n  //       <div className='tc'>\n  //         <h1 className='f1'>RoboFriends</h1>\n  //         <SearchBox searchChange={this.onSearchChange}/>\n  //         <Scroll>\n  //           <CardList robots={filteredRobots} />\n  //         </Scroll>\n  //       </div>\n  //     );\n  // }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sameer/code/robofriends/src/containers/App.js"],"names":["React","useState","useEffect","CardList","SearchBox","Scroll","db","App","robots","searchfield","fetchRobots","data","response","get","console","log","docs","forEach","item","setBlogs","onSearchChange","event","setState","target","value","map","robot","name","body"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,EAAP,MAAe,uBAAf;;AAEA,SAASC,GAAT,GAAe;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,MAAD,EAAQC,WAAR,IAAuBR,QAAQ,CAAC,EAAD,CAArC;;AAEA,QAAMS,WAAW,GAAC,YAAS;AACzB,UAAMC,IAAI,GAAC,MAAMC,QAAQ,CAACC,GAAT,CAAa,4CAAb,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA0CJ,IAA1C;AACAA,IAAAA,IAAI,CAACK,IAAL,CAAUC,OAAV,CAAkBC,IAAI,IAAE;AACvBC,MAAAA,QAAQ,CAAC,CAAC,GAAGX,MAAJ,EAAWU,IAAI,CAACP,IAAL,EAAX,CAAD,CAAR;AACA,KAFD;AAGD,GAND;;AAOAT,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT,CAjBa,CAqBb;AACA;AACA;AACA;AAEA;AACA;;AAEAU,EAAAA,cAAc,GAAIC,KAAD,IAAW;AAC1B,SAAKC,QAAL,CAAc;AAAEb,MAAAA,WAAW,EAAEY,KAAK,CAACE,MAAN,CAAaC;AAA5B,KAAd;AACD,GAFD,CA7Ba,CAiCb;AAEA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIhB,MAAM,IAAIA,MAAM,CAACiB,GAAP,CAAWC,KAAK,IAAE;AAC1B,wBACE;AAAK,MAAA,SAAS,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACC,IAAX,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAK,CAACE,IAAV,CAFF,CADF;AAMD,GAPS,CAFd,CADF,CArCa,CAoDb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,eAAerB,GAAf","sourcesContent":["// import React, { Component } from 'react';\nimport React,{useState,useEffect} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n// import Rating from '../components/Rating';\nimport db from '../firebase.config.js';\n\nfunction App() {\n  // constructor() {\n  //   super()\n  //   this.state = {\n  //     robots: [],\n  //     searchfield: ''\n  //   }\n  // }\n  const [robots,searchfield] = useState([]);\n\n  const fetchRobots=async()=>{\n    const data=await response.get('https://jsonplaceholder.typicode.com/users');\n    console.log(\"incomgin data from response\",data);\n    data.docs.forEach(item=>{\n     setBlogs([...robots,item.data()])\n    })\n  }\n  useEffect(() => {\n    fetchRobots();\n  }, [])\n\n  // componentDidMount() {\n  //   fetch('https://jsonplaceholder.typicode.com/users')\n  //     .then(response=> response.json())\n  //     .then(users => {this.setState({ robots: users})});\n\n  //   // fetch('firebase...').then\n  // }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })\n  }\n\n  // postRating = (cardID, ratingval) =>{\n\n  // }\n\n  return (\n    <div className=\"App\">\n      {\n        robots && robots.map(robot=>{\n          return(\n            <div className=\"X\">\n              <h4>{robot.name}</h4>\n              <p>{robot.body}</p>\n            </div>\n          )\n        })\n      }\n    </div>\n  );\n\n  // render() {\n  //   const { robots, searchfield } = this.state;\n  //   const filteredRobots = robots.filter(robot =>{\n  //     return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  //   })\n  //   return !robots.length ?\n  //     <h1>Loading</h1> :\n  //     (\n  //       <div className='tc'>\n  //         <h1 className='f1'>RoboFriends</h1>\n  //         <SearchBox searchChange={this.onSearchChange}/>\n  //         <Scroll>\n  //           <CardList robots={filteredRobots} />\n  //         </Scroll>\n  //       </div>\n  //     );\n  // }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}